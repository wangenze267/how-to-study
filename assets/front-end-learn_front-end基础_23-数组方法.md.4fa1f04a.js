import{_ as n,c as s,o as a,a as p}from"./app.971524e1.js";const d='{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"front-end-learn/front-end\u57FA\u7840/23-\u6570\u7EC4\u65B9\u6CD5.md"}',t={},o=p(`<ol><li><p>forEach :\u65E0\u6CD5\u5728\u8FC7\u7A0B\u4E2D\u7EC8\u6B62\uFF0C\u9700\u8981\u904D\u5386\u6BCF\u4E2A\u5143\u7D20\u6765\u67E5\u627E\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;\u6211&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u4F60&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u4ED6&#39;</span><span class="token punctuation">]</span>
<span class="token comment">//forEach\u904D\u5386</span>
arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">===</span> <span class="token string">&#39;\u4F60&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div></li><li><p>some\uFF1A\u5728\u627E\u5230\u5BF9\u5E94\u9879\u540E\u53EF\u4EE5\u901A\u8FC7retrun true \u6765\u7EC8\u6B62some\u5FAA\u73AF</p><div class="language-js"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;\u6211&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u4F60&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u4ED6&#39;</span><span class="token punctuation">]</span>

arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">===</span> <span class="token string">&quot;\u4F60&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token comment">//\u7EC8\u6B62\u5FAA\u73AF</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div></li><li><p>every: \u8FD4\u56DE\u6BCF\u4E00\u9879\u662F\u5426\u6EE1\u8DB3\u5224\u65AD\u6761\u4EF6\u7684\u5E03\u5C14\u503C</p><div class="language-js"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;\u8863\u670D&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">state</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;\u6C34\u679C&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">state</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;\u7535\u8111&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">state</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>state <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
</code></pre></div></li><li><p>filter\uFF1A\u5C06\u4E00\u4E2A\u6570\u7EC4\u7B5B\u9664\u4E0D\u6EE1\u8DB3\u6761\u4EF6\u5F97\u5E76\u5F97\u5230\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4</p><div class="language-js"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;\u8863\u670D&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">state</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;\u6C34\u679C&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">state</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;\u7535\u8111&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">state</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span>

arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>state <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token comment">//\u8FD9\u91CC\u4F1A\u5F97\u5230\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\uFF0C\u5373\u5C06\u4E0D\u6EE1\u8DB3\u6761\u4EF6\u5F97\u7B5B\u51FA</span>
</code></pre></div></li><li><p>reduce:\u901A\u8FC7\u5FAA\u73AF\u7D2F\u8BA1\u8FD0\u7B97\u5C06\u7ED3\u679C\u8FD4\u56DE\u7ED9\u51FD\u6570</p><div class="language-js"><pre><code>arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>state <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;\u7D2F\u52A0\u7ED3\u679C\uFF08\u521D\u59CB\u503C\uFF09&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u5FAA\u73AF\u9879&#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> \u521D\u59CB\u503C<span class="token punctuation">)</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>state <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">amt<span class="token punctuation">,</span>item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> amt <span class="token operator">+=</span> item<span class="token punctuation">.</span>price<span class="token operator">*</span>item<span class="token punctuation">.</span>count
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre></div></li></ol>`,1),e=[o];function c(l,r,u,k,i,y){return a(),s("div",null,e)}var g=n(t,[["render",c]]);export{d as __pageData,g as default};
